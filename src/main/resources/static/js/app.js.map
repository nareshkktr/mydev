{"version":3,"sources":["app/modules/app.js","app/components/footer/footerController.js","app/components/footer/footerDirective.js","app/components/header/headerController.js","app/components/header/headerDirective.js","app/configurations/routes.js","app/services/swaggerShareService.js","app/views/globalSearch/globalSearchController.js","app/views/home/homeController.js","app/views/signIn/signInController.js","app/views/signIn/signInService.js","app/views/signUp/signUpController.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/js/app.js","sourcesContent":["(function() {\r\n     'use strict';\r\n\tvar myIndiaApp=angular.module('myindia-app', ['ui.router','ui.bootstrap']);\r\n\tmyIndiaApp.run(function($state, $rootScope){\r\n\t\t   $rootScope.$state = $state;\r\n\t\t})\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').controller(\"footerController\", footerController);\r\n\r\n\r\n    function footerController() {\r\n\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').directive(\"myindiaFooter\", myIndiaFooter);\r\n\r\n\r\n    function myIndiaFooter() {\r\n\r\n        function link(scope, element, attrs) {\r\n        \t\r\n        };\r\n        \r\n        return {\r\n            restrict:'E',\r\n            link:link,\r\n            templateUrl: resource+'partials/footer.html', \r\n            controller:'footerController'\r\n    \t\t\r\n    \t}\t\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').controller(\"headerController\", headerController);\r\n\r\n\r\n    function headerController() {\r\n\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').directive(\"myindiaHeader\", myIndiaHeader);\r\n\r\n\r\n    function myIndiaHeader() {\r\n\r\n        function link(scope, element, attrs) {\r\n        \t\r\n        };\r\n        \r\n        return {\r\n            restrict:'E',\r\n            link:link,\r\n            templateUrl: resource+'partials/header.html', \r\n            controller:'headerController'\r\n    \t\t\r\n    \t}\t\r\n    }\r\n\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').config(routeConfig);\r\n\r\n\trouteConfig.$inject = [ '$stateProvider', '$urlRouterProvider' ];\r\n\r\n\tfunction routeConfig($stateProvider, $urlRouterProvider) {\r\n\r\n\t\t$urlRouterProvider.otherwise('/home');\r\n\r\n\t\t$stateProvider\r\n\r\n\t\t// HOME STATES AND NESTED VIEWS ========================================\r\n\t\t.state('home', {\r\n\t\t\turl : '/home',\r\n\t\t\ttemplateUrl : resource + 'partials/home.html',\r\n\t\t\tcontroller : 'homeController',\r\n\t\t\tcontrollerAs : 'hc'\r\n\t\t}).state('signIn', {\r\n\t\t\turl : '/signIn',\r\n\t\t\ttemplateUrl : resource + 'partials/signIn.html',\r\n\t\t\tcontroller : 'signInController',\r\n\t\t\tcontrollerAs : 'signIn'\r\n\t\t}).state('signUp', {\r\n\t\t\turl : '/signUp',\r\n\t\t\ttemplateUrl : resource + 'partials/signUp.html',\r\n\t\t\tcontroller : 'signUpController',\r\n\t\t\tcontrollerAs : 'sUpc'\r\n\t\t}).state('search', {\r\n\t\t\turl : '/search',\r\n\t\t\ttemplateUrl : resource + 'partials/globalSearch.html',\r\n\t\t\tcontroller : 'globalSearchController',\r\n\t\t\tcontrollerAs : 'gSc'\r\n\t\t});\r\n\t}\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').factory(\"swaggerShareService\", swaggerShareService);\r\n\r\n    swaggerShareService.$inject = ['$q'];\r\n\r\n    function swaggerShareService($q) {\r\n\r\n        var apiMetaData = {};\r\n\r\n    \tvar swaggerShareService = {\r\n    \t\tgetAPIMetaData : getAPIMetaData\r\n    \t};\r\n\r\n        return swaggerShareService;\r\n\r\n    \tfunction getAPIMetaData(hostName,setMetaData){\r\n\r\n    \t\tif(apiMetaData.metaInfo){\r\n    \t\t\tsetMetaData(apiMetaData.metaInfo);\r\n    \t\t}else{\r\n    \t\t\tfetchAPIMetaData(hostName).then(function(data){\r\n    \t\t\t\tapiMetaData.metaInfo = data;\r\n    \t\t\t\tsetMetaData(apiMetaData.metaInfo);\r\n    \t\t\t});\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction fetchAPIMetaData(hostName){\r\n    \t\t\r\n    \t\tlet deferred = $q.defer();\r\n\r\n    \t\tlet swagger = new SwaggerClient({\r\n                url: hostName+'api/swagger.json',\r\n                success: function() {\r\n                      deferred.resolve(swagger);\r\n                },error: function(error){\r\n                \tdeferred.reject(error);\r\n                }\r\n        \t});\r\n\r\n        \treturn deferred.promise;\t\r\n\r\n    \t}\r\n\r\n        \r\n    }\r\n\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').controller(\"globalSearchController\",\r\n\t\t\tglobalSearchController);\r\n\r\n\tglobalSearchController.$inject = [ 'swaggerShareService' ];\r\n\r\n\tfunction globalSearchController(swaggerShareService) {\r\n\r\n\t\tswaggerShareService.getAPIMetaData('http://localhost:8080/',\r\n\t\t\t\tsetAPIMetaData);\r\n\r\n\t\tfunction setAPIMetaData(metaInfo) {\r\n\t\t\talert(metaInfo);\r\n\t\t}\r\n\t}\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').controller(\"homeController\", homeController);\r\n\r\n    homeController.$inject = ['swaggerShareService'];\r\n\r\n    function homeController(swaggerShareService) {\r\n    \t\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').controller(\"signInController\", signInController);\r\n\r\n    signInController.$inject = ['signInService'];\r\n\r\n    function signInController(signInService) {\r\n\r\n    \tvar signIn = this;\r\n \t\tsignIn.login = login;\r\n\r\n    \tfunction login(){\r\n    \t\tsignInService.login(signIn.userName,signIn.password).then(loginSuccess).catch(loginFailiure);\r\n\r\n    \t\tfunction loginSuccess(){\r\n    \t\t\talert(\"Login Success\");\r\n    \t\t}\r\n\r\n    \t\tfunction loginFailed(){\r\n    \t\t\talert(\"Login Failed...\");\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').factory(\"signInService\", signInService);\r\n\r\n    signInService.$inject = ['$q','swaggerShareService'];\r\n\r\n    function signInService($q,swaggerShareService) {\r\n\r\n        var services = {};\r\n\r\n    \tvar signInService = {\r\n    \t\tlogin : login\r\n    \t};\r\n\r\n        //Call and save the data\r\n        swaggerShareService.getAPIMetaData('http://localhost:8080/',setAPIMetaData);\r\n\r\n        return signInService;\r\n\r\n        function setAPIMetaData(metaInfo){\r\n            services = metaInfo;\r\n        }\r\n\r\n    \tfunction login(userName,password){\r\n\r\n            let requestBody = {\r\n                loginUserName: userName,\r\n                password: password\r\n            }\r\n            let deferred = $q.defer();\r\n\r\n            services.account.login({body:JSON.stringify(requestBody)},loginSuccess,loginFailure);\r\n        \r\n            return deferred;\r\n\r\n            function loginSuccess(data){\r\n                deferred.resolve(data);\r\n            }\r\n\r\n            function loginFailiure(error){\r\n                deferred.reject(error);\r\n            }\r\n\r\n    \t}\r\n        \r\n    }\r\n\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').controller(\"signUpController\",\r\n\t\t\tsignUpController);\r\n\r\n\tsignUpController.$inject = [ 'swaggerShareService' ];\r\n\r\n\tfunction signUpController(swaggerShareService) {\r\n\r\n\t\tswaggerShareService.getAPIMetaData('http://localhost:8080/',\r\n\t\t\t\tsetAPIMetaData);\r\n\r\n\t\tfunction setAPIMetaData(metaInfo) {\r\n\t\t\talert(metaInfo);\r\n\t\t}\r\n\t}\r\n\r\n})();"]}