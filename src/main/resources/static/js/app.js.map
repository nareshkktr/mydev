{"version":3,"sources":["app/modules/app.js","app/components/compareEqualValidator/compareEqualValidatorDirective.js","app/components/enterKey/myIndiaEnterKey.js","app/components/floatingIcon/floaingIconController.js","app/components/floatingIcon/floatingIconDirective.js","app/components/footer/footerController.js","app/components/footer/footerDirective.js","app/components/header/headerController.js","app/components/header/headerDirective.js","app/components/overlay/overlayController.js","app/components/overlay/overlayDirective.js","app/configurations/routes.js","app/services/dataShareService.js","app/services/swaggerShareService.js","app/views/globalSearch/globalSearchController.js","app/views/globalSearch/globalSearchService.js","app/views/home/homeController.js","app/views/signIn/signInController.js","app/views/signIn/signInService.js","app/views/signUp/createAccountService.js","app/views/signUp/identifyConflictParentLocationsService.js","app/views/signUp/signUpController.js","app/views/signUp/validateElectorService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/js/app.js","sourcesContent":["(function() {\r\n     'use strict';\r\n\tvar myIndiaApp=angular.module('myindia-app', ['ui.router','ui.bootstrap','ngAnimate','ngMessages']);\r\n\tmyIndiaApp.run(function($state, $rootScope){\r\n\t\t   $rootScope.$state = $state;\r\n\t\t})\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').directive(\"compareEqualValidator\", compareEqualValidator);\r\n\r\n    function compareEqualValidator() {\r\n        \r\n        var compareEqualValidator = {\r\n          link: link,\r\n          require: 'ngModel'\r\n        };\r\n        \r\n        return compareEqualValidator;\r\n\r\n        function link(scope, element, attrs, ngModel) {\r\n          /* */\r\n\r\n          ngModel.$parsers.unshift(function (value) {\r\n            console.log(value);\r\n            if(scope.signUp.userPassword)\r\n              ngModel.$setValidity('compareEqualValidator', scope.signUp.userPassword === value);\r\n             return value;\r\n          });\r\n\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').directive(\"myIndiaEnterKey\", myIndiaEnterKey);\r\n\r\n\tfunction myIndiaEnterKey() {\r\n\r\n\t\tfunction link(scope, element, attrs) {\r\n\t\t\telement.bind(\"keydown keypress\", function(event) {\r\n\t\t\t\tvar keyCode = event.which || event.keyCode;\r\n\r\n\t\t\t\t// If enter key is pressed\r\n\t\t\t\tif (keyCode === 13) {\r\n\t\t\t\t\tscope.$apply(function() {\r\n\t\t\t\t\t\t// Evaluate the expression\r\n\t\t\t\t\t\tscope.$eval(attrs.myIndiaEnterKey);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn {\r\n\t\t\trestrict : 'A',\r\n\t\t\tlink : link\r\n\t\t}\r\n\t}\r\n})();","(function() {\r\n\t'use strict';\r\n\tangular.module('myindia-app').controller(\"floaingIconController\",\r\n\t\t\tfloaingIconController);\r\n\r\n\tfloaingIconController.$inject = [];\r\n\r\n\tfunction floaingIconController() {\r\n\t\tvar floatingIcon = this;\r\n\t}\r\n})();\r\n","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').directive(\"floatingIcon\", floatingIcon);\r\n\r\n\tfunction floatingIcon() {\r\n\r\n\t\tvar floatingIcon = {\r\n\t\t\trestrict : 'E',\r\n\t\t\tlink : link,\r\n\t\t\ttemplateUrl : resource + 'partials/floatingIcon.html',\r\n\t\t\tcontroller : 'floaingIconController',\r\n\t\t\tcontrollerAs : 'floatingIcon'\r\n\t\t};\r\n\r\n\t\treturn floatingIcon;\r\n\r\n\t\tfunction link(scope, element, attrs) {\r\n\t\t}\r\n\t}\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').controller(\"footerController\", footerController);\r\n\r\n\r\n    function footerController() {\r\n\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').directive(\"myindiaFooter\", myIndiaFooter);\r\n\r\n\r\n    function myIndiaFooter() {\r\n\r\n        function link(scope, element, attrs) {\r\n        \t\r\n        };\r\n        \r\n        return {\r\n            restrict:'E',\r\n            link:link,\r\n            templateUrl: resource+'partials/footer.html', \r\n            controller:'footerController'\r\n    \t\t\r\n    \t}\t\r\n    }\r\n\r\n})();","(function() {\r\n\t'use strict';\r\n\tangular.module('myindia-app').controller(\"headerController\",\r\n\t\t\theaderController);\r\n\t\r\n\theaderController.$inject = [ '$state','dataShareService','$scope'];\r\n\r\n\tfunction headerController($state,dataShareService,$scope) {\r\n\r\n\t\tvar header = this;\r\n\t\theader.searchTerm = '';\r\n\t\theader.gotoSearch = gotoSearch;\r\n\r\n\t\t\r\n\t\theader.userInfo = dataShareService.getUserInfo();\r\n\r\n\t\tif(header.userInfo){\r\n\r\n\t\t\t//Preapre user profile image\r\n\t\t\tif(!header.userInfo.userImage){\r\n\t\t\t\tif(header.userInfo.gender == 'Male'){\r\n\t\t\t\t\theader.userInfo.userImage = resource+'Users-User-Male-icon.png';\r\n\t\t\t\t}else if(header.userInfo.gender == 'Female'){\r\n\t\t\t\t\theader.userInfo.userImage = resource+'Users-User-Female-icon.png';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Prepare location information\r\n\t\t\tif(header.userInfo.userLocation.locationVillage){\r\n\t\t\t\theader.userInfo.location = header.userInfo.userLocation.locationVillage;\r\n\t\t\t}else if(header.userInfo.userLocation.locationMunicipality){\r\n\t\t\t\theader.userInfo.location = header.userInfo.userLocation.locationMunicipality; \r\n\t\t\t}else if(header.userInfo.userLocation.locationMunicipalCorporation){\r\n\t\t\t\theader.userInfo.location = header.userInfo.userLocation.locationMunicipalCorporation; \r\n\t\t\t}else if(header.userInfo.userLocation.locationTownPanchayat){\r\n\t\t\t\theader.userInfo.location = header.userInfo.userLocation.locationTownPanchayat; \r\n\t\t\t} \r\n\r\n\t\t\tif(header.userInfo.userLocation.locationState)\r\n\t\t\t\theader.userInfo.location += \",\" + header.userInfo.userLocation.locationDistrict;\r\n\r\n\t\t}\r\n\t\t\r\n\t\tfunction gotoSearch() {\r\n\t\t\t$state.go('search', {\r\n\t\t\t\tsearchTerm : header.searchTerm\r\n\t\t\t});\r\n\t\t};\r\n\t}\r\n})();\r\n","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').directive(\"myindiaHeader\", myIndiaHeader);\r\n\r\n\tfunction myIndiaHeader() {\r\n\r\n\t\tfunction link(scope, element, attrs) {\r\n\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\trestrict : 'E',\r\n\t\t\tlink : link,\r\n\t\t\ttemplateUrl : resource + 'partials/header.html',\r\n\t\t\tcontroller : 'headerController',\r\n\t\t\tcontrollerAs : 'header'\r\n\t\t}\r\n\t}\r\n\r\n})();\r\n","(function() {\r\n\t'use strict';\r\n\tangular.module('myindia-app').controller(\"overlayController\",\r\n\t\t\toverlayController);\r\n\r\n\toverlayController.$inject = [];\r\n\r\n\tfunction overlayController() {\r\n\t\tvar overlay = this;\r\n\t}\r\n})();\r\n","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').directive(\"overlay\", overlay);\r\n\r\n\tfunction overlay() {\r\n\r\n\t\tvar overlay = {\r\n\t\t\trestrict : 'E',\r\n\t\t\tlink : link,\r\n\t\t\ttemplateUrl : resource + 'partials/overlay.html',\r\n\t\t\tcontroller : 'overlayController',\r\n\t\t\tcontrollerAs : 'overlay'\r\n\t\t};\r\n\r\n\t\treturn overlay;\r\n\r\n\t\tfunction link(scope, element, attrs) {\r\n\t\t}\r\n\t}\r\n})();\r\n","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').config(routeConfig);\r\n\r\n\trouteConfig.$inject = [ '$stateProvider', '$urlRouterProvider' ];\r\n\r\n\tfunction routeConfig($stateProvider, $urlRouterProvider) {\r\n\r\n\t\t$urlRouterProvider.otherwise('/home');\r\n\r\n\t\t$stateProvider\r\n\r\n\t\t// HOME STATES AND NESTED VIEWS ========================================\r\n\t\t.state('home', {\r\n\t\t\turl : '/home',\r\n\t\t\ttemplateUrl : resource + 'partials/home.html',\r\n\t\t\tcontroller : 'homeController',\r\n\t\t\tcontrollerAs : 'home'\r\n\t\t}).state('signIn', {\r\n\t\t\turl : '/signIn',\r\n\t\t\ttemplateUrl : resource + 'partials/signIn.html',\r\n\t\t\tcontroller : 'signInController',\r\n\t\t\tcontrollerAs : 'signIn'\r\n\t\t}).state('signUp', {\r\n\t\t\turl : '/signUp',\r\n\t\t\ttemplateUrl : resource + 'partials/signUp.html',\r\n\t\t\tcontroller : 'signUpController',\r\n\t\t\tcontrollerAs : 'signUp'\r\n\t\t}).state('signUp.validate', {\r\n\t\t\turl : '/validate',\r\n\t\t\ttemplateUrl : resource + 'partials/validateElector.html'\r\n\t\t}).state('signUp.locationSetup', {\r\n\t\t\turl : '/locationSetup',\r\n\t\t\ttemplateUrl : resource + 'partials/userLocationSetup.html'\r\n\t\t}).state('signUp.accountSetup', {\r\n\t\t\turl : '/accountSetup',\r\n\t\t\ttemplateUrl : resource + 'partials/accountSetup.html'\r\n\t\t}).state('search', {\r\n\t\t\turl : '/search',\r\n\t\t\tparams : {\r\n\t\t\t\t'searchTerm' : ''\r\n\t\t\t},\r\n\t\t\ttemplateUrl : resource + 'partials/globalSearch.html',\r\n\t\t\tcontroller : 'globalSearchController',\r\n\t\t\tcontrollerAs : 'globalSearch'\r\n\t\t});\r\n\t}\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').factory(\"dataShareService\", dataShareService);\r\n\r\n    dataShareService.$inject = ['$rootScope'];\r\n\r\n    function dataShareService($rootScope) {\r\n\r\n        var data = {};\r\n\r\n    \tvar dataShareService = {\r\n    \t\tgetUserInfo : getUserInfo,\r\n            setUserInfo: setUserInfo\r\n    \t};\r\n\r\n        return dataShareService;\r\n\r\n    \tfunction getUserInfo(){\r\n            return data.userInfo;\r\n    \t}\r\n\r\n        function setUserInfo(userInfo){\r\n            data.userInfo = userInfo;\r\n            $rootScope.$broadcast('userInfo',data.userInfo);\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').factory(\"swaggerShareService\", swaggerShareService);\r\n\r\n    swaggerShareService.$inject = ['$q'];\r\n\r\n    function swaggerShareService($q) {\r\n\r\n        var apiMetaData = {};\r\n\r\n        var hostName = 'http://localhost:8080/';\r\n\r\n    \tvar swaggerShareService = {\r\n    \t\tgetAPIMetaData : getAPIMetaData\r\n    \t};\r\n\r\n        return swaggerShareService;\r\n\r\n    \tfunction getAPIMetaData(setMetaData){\r\n\r\n    \t\tif(apiMetaData.metaInfo){\r\n    \t\t\tsetMetaData(apiMetaData.metaInfo);\r\n    \t\t}else{\r\n    \t\t\tfetchAPIMetaData(hostName).then(function(data){\r\n    \t\t\t\tapiMetaData.metaInfo = data;\r\n    \t\t\t\tsetMetaData(apiMetaData.metaInfo);\r\n    \t\t\t});\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction fetchAPIMetaData(hostName){\r\n    \t\t\r\n    \t\tlet deferred = $q.defer();\r\n\r\n    \t\tlet swagger = new SwaggerClient({\r\n                url: hostName+'api/swagger.json',\r\n                success: function() {\r\n                      deferred.resolve(swagger);\r\n                },error: function(error){\r\n                \tdeferred.reject(error);\r\n                }\r\n        \t});\r\n\r\n        \treturn deferred.promise;\t\r\n\r\n    \t}\r\n\r\n        \r\n    }\r\n\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').controller(\"globalSearchController\",\r\n\t\t\tglobalSearchController);\r\n\r\n\tglobalSearchController.$inject = [ '$state', 'globalSearchService' ];\r\n\r\n\tfunction globalSearchController($state,globalSearchService) {\r\n\t\t\r\n\t\tvar globalSearch=this;\r\n\t\tglobalSearch.searchTerm=$state.params.searchTerm;\r\n\t\tglobalSearch.searchObjectType=\"\";\r\n\t\tglobalSearch.searchResults = [];\r\n\t\tglobalSearch.objectsCount = {};\r\n\t\tglobalSearch.totalCount = 0;\r\n\t\tglobalSearch.search=search;\r\n\t\t\r\n\t\tsearch('ALL');\r\n\t\t\r\n\t\tfunction search(searchObjectType){\r\n\t\t\t\r\n\t\t\tglobalSearch.searchObjectType=searchObjectType;\r\n\t\t\t\r\n\t\t\tglobalSearchService.search(globalSearch.searchTerm,globalSearch.searchObjectType).then(searchSuccess).catch(searchError);\r\n\t\t\t\r\n\t\t\tfunction searchSuccess(data){\r\n\t\t\t\tglobalSearch.searchResults = data.searchResults;\r\n\t\t\t\tglobalSearch.totalCount = data.totalCount;\r\n\t\t\t\tglobalSearch.objectsCount = data.objectsCount;\r\n\t\t\t}\r\n\t\t\tfunction searchError(error){\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').factory(\"globalSearchService\", globalSearchService);\r\n\r\n    globalSearchService.$inject = ['$q','swaggerShareService'];\r\n\r\n    function globalSearchService($q,swaggerShareService) {\r\n\r\n        var services = {};\r\n\r\n    \tvar globalSearchService = {\r\n    \t\tsearch : search\r\n    \t};\r\n\r\n        // Call and save the data\r\n        swaggerShareService.getAPIMetaData(setAPIMetaData);\r\n\r\n        return globalSearchService;\r\n\r\n        function setAPIMetaData(metaInfo){\r\n            services = metaInfo;\r\n        }\r\n\r\n    \tfunction search(searchTerm,searchObjectType){\r\n    \t\t\r\n    \t\tlet requestBody = {\r\n    \t\t\t\tsearchText: searchTerm,\r\n    \t\t\t\tsearchObjectType: searchObjectType\r\n                }\r\n\r\n            let deferred = $q.defer();\r\n\r\n            services.search.getAllGlobalSearchResults({body:JSON.stringify(requestBody)},searchSuccess,searchFailure);\r\n        \r\n            return deferred.promise;\r\n\r\n            function searchSuccess(data){\r\n                deferred.resolve(data.obj);\r\n            }\r\n\r\n            function searchFailure(error){\r\n                deferred.reject(error);\r\n            }\r\n\r\n    \t}\r\n        \r\n    }\r\n\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').controller(\"homeController\", homeController);\r\n\r\n\thomeController.$inject = [ 'swaggerShareService' ];\r\n\r\n\tfunction homeController(swaggerShareService) {\r\n\r\n\t\t// swaggerShareService.getAPIMetaData('http://'+window.location.host+'/',setAPIMetaData);\r\n\t\tswaggerShareService.getAPIMetaData(setAPIMetaData);\r\n\r\n\t\tfunction setAPIMetaData(metaInfo) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').controller(\"signInController\", signInController);\r\n\r\n    signInController.$inject = ['signInService','$state','dataShareService'];\r\n\r\n    function signInController(signInService,$state,dataShareService) {\r\n\r\n    \tvar signIn = this;\r\n \t\tsignIn.login = login;\r\n \t\tsignIn.gotoSignUp = gotoSignUp;\r\n\r\n    \tfunction login(){\r\n    \t\tsignInService.login(signIn.userName,signIn.password).then(loginSuccess).catch(loginFailure);\r\n\r\n    \t\tfunction loginSuccess(data){\r\n    \t\t\talert(\"Login Success\");\r\n                dataShareService.setUserInfo(data);\r\n    \t\t\t$state.go('home');\r\n    \t\t}\r\n\r\n    \t\tfunction loginFailure(error){\r\n    \t\t\talert(error);\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \tfunction gotoSignUp(){\r\n    \t\t$state.go('signUp.validate');\r\n    \t}\r\n    \t\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').factory(\"signInService\", signInService);\r\n\r\n    signInService.$inject = ['$q','swaggerShareService'];\r\n\r\n    function signInService($q,swaggerShareService) {\r\n\r\n        var services = {};\r\n\r\n    \tvar signInService = {\r\n    \t\tlogin : login\r\n    \t};\r\n\r\n        //Call and save the data\r\n        swaggerShareService.getAPIMetaData(setAPIMetaData);\r\n\r\n        return signInService;\r\n\r\n        function setAPIMetaData(metaInfo){\r\n            services = metaInfo;\r\n        }\r\n\r\n    \tfunction login(userName,password){\r\n\r\n            let requestBody = {\r\n                loginUserName: userName,\r\n                password: password\r\n            }\r\n            let deferred = $q.defer();\r\n\r\n            services.account.login({body:JSON.stringify(requestBody)},loginSuccess,loginFailure);\r\n        \r\n            return deferred.promise;\r\n\r\n            function loginSuccess(data){\r\n                deferred.resolve(data.obj);\r\n            }\r\n\r\n            function loginFailure(error){\r\n                deferred.reject(error);\r\n            }\r\n\r\n    \t}\r\n        \r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').factory(\"createAccountService\", createAccountService);\r\n\r\n    createAccountService.$inject = ['$q','swaggerShareService'];\r\n\r\n    function createAccountService($q,swaggerShareService) {\r\n\r\n        var services = {};\r\n\r\n    \tvar createAccountService = {\r\n    \t\tcreate : create\r\n    \t};\r\n\r\n        //Call and save the data\r\n        swaggerShareService.getAPIMetaData(setAPIMetaData);\r\n\r\n        return createAccountService;\r\n\r\n        function setAPIMetaData(metaInfo){\r\n            services = metaInfo;\r\n        }\r\n\r\n    \tfunction create(userGuid,userName,password,childLocation,parentLocation){\r\n\r\n            let requestBody = {\r\n                loginUserName: userName,\r\n                password: password,\r\n                userGuid: userGuid,\r\n                childLocation: childLocation,\r\n                parentLocation: parentLocation\r\n            };\r\n\r\n            let deferred = $q.defer();\r\n\r\n            services.account.createAccount({body:JSON.stringify(requestBody)},createAccountSuccess,createAccountFailure);\r\n        \r\n            return deferred.promise;\r\n\r\n            function createAccountSuccess(data){\r\n                deferred.resolve(data.obj);\r\n            }\r\n\r\n            function createAccountFailure(error){\r\n                deferred.reject(error);\r\n            }\r\n\r\n    \t}\r\n        \r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').factory(\"identifyConflictParentLocationsService\", identifyConflictParentLocationsService);\r\n\r\n    identifyConflictParentLocationsService.$inject = ['$q','swaggerShareService'];\r\n\r\n    function identifyConflictParentLocationsService($q,swaggerShareService) {\r\n\r\n        var services = {};\r\n\r\n    \tvar identifyConflictParentLocationsService = {\r\n    \t\tsetup : setup\r\n    \t};\r\n\r\n        //Call and save the data\r\n        swaggerShareService.getAPIMetaData(setAPIMetaData);\r\n\r\n        return identifyConflictParentLocationsService;\r\n\r\n        function setAPIMetaData(metaInfo){\r\n            services = metaInfo;\r\n        }\r\n\r\n    \tfunction setup(locationObj){\r\n\r\n            let deferred = $q.defer();\r\n\r\n            services.user.getReferenceLocationForMaster({body:JSON.stringify(locationObj)},identifyConflictParentLocationsServiceSuccess,identifyConflictParentLocationsServiceFailure);\r\n        \r\n            return deferred.promise;\r\n\r\n            function identifyConflictParentLocationsServiceSuccess(data){\r\n                deferred.resolve(data.obj);\r\n            }\r\n\r\n            function identifyConflictParentLocationsServiceFailure(error){\r\n                deferred.reject(error);\r\n            }\r\n\r\n    \t}\r\n        \r\n    }\r\n\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular.module('myindia-app').controller(\"signUpController\",\r\n\t\t\tsignUpController);\r\n\r\n\tsignUpController.$inject = [ '$state','validateElectorService','identifyConflictParentLocationsService','createAccountService','dataShareService' ];\r\n\r\n\tfunction signUpController($state,validateElectorService,identifyConflictParentLocationsService,createAccountService,dataShareService) {\r\n\t\t\r\n\t\tvar signUp = this;\r\n\t\tsignUp.validateElector = validateElector;\r\n\t\tsignUp.validationLocationForConflict = validationLocationForConflict;\r\n\t\tsignUp.createAccount = createAccount;\r\n\t\tsignUp.elector = {};\r\n\t\tsignUp.years = [];\r\n\t\tsignUp.numberOfYears = 100;\r\n\t\tsignUp.gender = 'Male';\r\n\t\tsignUp.passwordRegex = \"^.*(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[~!@#$%^&*(),./?]).*$\";\r\n\r\n\t\tpopulateYears();\r\n\r\n\t\tfunction validateElector(){\r\n\r\n\t\t\t// Make an API call to valdiate user\r\n\t\t\tvalidateElectorService.validate(signUp.electorId,signUp.electorName,signUp.referenceName,signUp.gender,signUp.yob)\r\n\t\t\t\t\t\t\t\t\t.then(validationSuccess).catch(validationFailure);\r\n\r\n\t\t\tfunction validationSuccess(data){\r\n\t\t\t\tsignUp.elector.location = data;\r\n\t\t\t\t$state.transitionTo('signUp.locationSetup');\r\n\t\t\t}\r\n\r\n\t\t\tfunction validationFailure(error){\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tfunction validationLocationForConflict(){\r\n\r\n\t\t\tif(signUp.elector.conflictParentLocations && signUp.parentLocation){\r\n\t\t\t\t$state.transitionTo('signUp.accountSetup');\r\n\t\t\t}\r\n\r\n\t\t\t// Indetify if there are conflicting parents \r\n\t\t\tidentifyConflictParentLocationsService.setup(signUp.leafLocation).then(identifyConflictParentLocationsSuccess)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.catch(identifyConflictParentLocationsFailure);\r\n\r\n\r\n\t\t\tfunction identifyConflictParentLocationsSuccess(data){\r\n\t\t\t\tif(data.parentLocations && data.parentLocations.length == 1){\r\n\t\t\t\t\tsignUp.parentLocation = data.parentLocations[0];\r\n\t\t\t\t\t$state.transitionTo('signUp.accountSetup');\r\n\t\t\t\t}  \r\n\t\t\t\t//If not there are multiple location populate them.\r\n\t\t\t\tsignUp.elector.conflictParentLocations = data.parentLocations;\r\n\t\t\t}\r\n\r\n\t\t\tfunction identifyConflictParentLocationsFailure(error){\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction createAccount(){\r\n\r\n\t\t\tcreateAccountService.create(signUp.elector.location.userGuid,signUp.userName,signUp.userPassword,signUp.leafLocation,signUp.parentLocation)\r\n\t\t\t\t\t\t\t\t.then(createAccountSuccess).catch(createAccountFailure);\r\n\r\n\t\t\tfunction createAccountSuccess(data){\r\n\t\t\t\tdataShareService.setUserInfo(data);\r\n\t\t\t\t$state.transitionTo('home');\r\n\t\t\t}\r\n\r\n\t\t\tfunction createAccountFailure(error){\r\n\t\t\t\talert(error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction populateYears(){\r\n\t    \tlet currentYear = new Date().getFullYear();\r\n\t\t    //populate default ste of years.\r\n\t\t    for(let start=0;start<signUp.numberOfYears;start++){\r\n\t\t       signUp.years.push(currentYear--);\r\n\t\t    }\r\n\t\t}\r\n\t}\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('myindia-app').factory(\"validateElectorService\", validateElectorService);\r\n\r\n    validateElectorService.$inject = ['$q','swaggerShareService'];\r\n\r\n    function validateElectorService($q,swaggerShareService) {\r\n\r\n        var services = {};\r\n\r\n    \tvar validateElectorService = {\r\n    \t\tvalidate : validate\r\n    \t};\r\n\r\n        //Call and save the data\r\n        swaggerShareService.getAPIMetaData(setAPIMetaData);\r\n\r\n        return validateElectorService;\r\n\r\n        function setAPIMetaData(metaInfo){\r\n            services = metaInfo;\r\n        }\r\n\r\n    \tfunction validate(electorId,electorName,referenceName,gender,yob){\r\n\r\n            let requestBody = {\r\n                idCardNo: electorId,\r\n                userName: electorName,\r\n                referenceName: referenceName,\r\n                gender: gender,\r\n                yearOfBirth: yob\r\n            };\r\n\r\n            let deferred = $q.defer();\r\n\r\n            services.user.getUserByVoterCardDetails({body:JSON.stringify(requestBody)},validationSuccess,validationFailure);\r\n        \r\n            return deferred.promise;\r\n\r\n            function validationSuccess(data){\r\n                deferred.resolve(data.obj);\r\n            }\r\n\r\n            function validationFailure(error){\r\n                deferred.reject(error);\r\n            }\r\n\r\n    \t}\r\n        \r\n    }\r\n\r\n})();"]}